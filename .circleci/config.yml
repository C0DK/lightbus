version: 2.1

workflows:
  version: 2
  tests:
    jobs:
      - test-37
      - test-38
      - combine_coverage_reports:
          requires:
            - test-37
            - test-38

  build_and_deploy_docs:
    jobs:
      - docs:
          filters:
            branches:
              only:
                - master
jobs:
  test-37: &test-template
    docker:
      - image: circleci/python:3.7
      - image: postgres:9.6.2
      - image: redis:5

    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-3-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
      - run:
          command: |
            poetry config settings.virtualenvs.in-project true
            poetry install
            mkdir -p .coverage .test-reports

      - run:
          command: |
            poetry run pytest --cov=lightbus --junit-xml=junit.xml -v -m "not benchmark"

      - run:
          command: |
            mv .coverage/coverage .coverage/coverage$CIRCLE_BUILD_NUM

      - persist_to_workspace:
          root: /home/circleci/project/.coverage
          paths:
            - coverage*

      - store_test_results:
          path: .test-reports

      - save_cache:
          key: deps-2-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
          paths:
            - ".venv"

  test-38:
    <<: *test-template
    docker:
      - image: circleci/python:3.8.1
      - image: postgres:9.6.2
      - image: redis:5

  docs:
    docker:
      - image: circleci/python:3.7

    steps:
      - add_ssh_keys:
          fingerprints:
            - "cf:7f:13:98:f7:41:bf:92:af:ff:52:ed:6c:35:8f:65"

      - checkout

      - restore_cache:
          keys:
            - deps-3-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
      - run:
          # Mike needs the git config user.name & user.email values set
          command: |
            git config --global user.name "Adam Charnock"
            git config --global user.email "adam@adamcharnock.com"
            poetry config settings.virtualenvs.in-project true
            poetry install
            poetry run lightbus dumpconfigschema > docs/static/default-config-schema.json
            poetry run mike deploy dev --message="Automated build by CircleCI [ci skip]" --push --force

      - save_cache:
          key: deps-2-{{ .Environment.CIRCLE_JOB }}-{{ checksum "pyproject.toml" }}
          paths:
            - ".venv"

  combine_coverage_reports:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - attach_workspace:
          at: .coverage
      - run:
          command: |
            poetry install
            poetry run coverage combine .coverage/coverage*
            poetry run coverage xml -i
            poetry run python-codacy-coverage -r coverage.xml
